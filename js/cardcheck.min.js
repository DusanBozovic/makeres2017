/*!
 * Card Check
 * 
 * A credit card validator and type guesser 
 * 
 * This plugin allows you to easily get the credit card type of 
 * whatever number is being entered. It is highly configurable 
 * to allow you to add additional credit card types as needed 
 * without ever having to adjust the internal code.
 *  
 * For documentation, look in the package you downloaded or go to
 * http://eclarian.com/cardcheck/
 * 
 * NOTE: This is not open source software and you must purchase
 * a license to legally use.
 * 
 * @uses       jQuery
 * @author     Eclarian Dev Team <eclarian@eclarian.com>
 * @copyright  Eclarian LLC
 * @date       November 29, 2011
 * @updated    January 14, 2015
 * @version    2.0.1
 */
 (function(h,d){if(!h.CardCheck){var l={cardNumber:null,allowSpaces:!0,acceptedCards:"visa mastercard amex diners discover jcb maestro".split(" "),niceNames:{visa:"Visa",mastercard:"Mastercard",amex:"American Express",discover:"Discover",diners:"Diners Club",jcb:"JCB",maestro:"Maestro"},regExpNumCheck:"^[0-9]+$",regExpApprox:{visa:"^4",mastercard:"^5[1-5]",amex:"^(34|37)",discover:"^6011",diners:"^(30|36|38|39)",jcb:"^35",maestro:"^(5018|5020|5038|6304|6759|6761|6762|6763)"},startNum:{visa:["4"],mastercard:["5"],
amex:["3"],discover:["6"],diners:["3"],jcb:["3","2","1"],maestro:["5","6"]},cardLength:{visa:[13,16],mastercard:[16],amex:[15],discover:[16],diners:[14],jcb:[15,16],maestro:[12,13,14,15,16,17,18,19]}},k=function(a){return this instanceof k?(this._callbacks={},this._settings={},"number"===typeof a||"string"===typeof a?this.options().cardNumber(a):this.options(a)):new k(a)};k.prototype={_cardNumber:null,_cardType:null,_isValid:void 0,_numCheck:null,cardNumber:function(a){if("undefined"===typeof a)return this._cardNumber;
a=a.toString();!0===this._settings.allowSpaces&&(a=a.replace(/\s/g,""));if(this._cardNumber===a)return this;this._cardNumber=a;return this.evaluate()},cardType:function(a){return this._cardType?a?this._settings.niceNames[this._cardType]:this._cardType:null},niceName:function(a){return this._settings.niceNames[a]?this._settings.niceNames[a]:""},eachCard:function(a){for(var b=0;b<this._settings.acceptedCards.length;b++)if(!1===a(this._settings.acceptedCards[b]))return!1;return this},evaluate:function(){this._numCheck||
(this._numCheck=new RegExp(this._settings.regExpNumCheck));if(this._cardNumber)if(this._cardNumber.match(this._numCheck)){var a=this;this.eachCard(function(b){if(1===a._cardNumber.length&&b in a._settings.startNum){if("3"===a._cardNumber||"6"===a._cardNumber)return a._switchState(null),!0;if(-1!==d.inArray(a._cardNumber,a._settings.startNum[b]))return a._switchState(null,b),!1}else if(2===a._cardNumber.length&&("60"===a._cardNumber||"65"===a._cardNumber))return a._switchState(null,"discover"),!1;
var c,f=!1,e=!1,g=!1;b in a._settings.cardLength&&-1!==d.inArray(a._cardNumber.length,a._settings.cardLength[b])?f=!0:a._cardNumber.length>=Math.max.apply(Math,a._settings.cardLength[b])?(e=f=!0,g=a._cardNumber.length>Math.max.apply(Math,a._settings.cardLength[b])):!0===a._isValid&&a._delayState(null);if(b in a._settings.regExpApprox&&(c=new RegExp(a._settings.regExpApprox[b]),a._cardNumber.match(c))){if(!1===f)return a._switchState(null,b),!1;!0!==a.luhnCheck(a._cardNumber)||g?e?a._switchState(!1,
b):a._cardNumber.length<Math.min.apply(Math,a._settings.cardLength[b])&&a._switchState(null,b):a._switchState(!0,b);return!1}})}else this._switchState(!1);else this._switchState(null);return this},luhnCheck:function(a){var b=[[0,2,4,6,8,1,3,5,7,9],[0,1,2,3,4,5,6,7,8,9]],c=0;a.replace(/\D+/g,"").replace(/[\d]/g,function(a,d,g){c+=b[g.length-d&1][parseInt(a,10)]});return 0===c%10&&0<c},options:function(a){var b,c=!1;a=a||{};a.cardNumber&&(b=a.cardNumber,c=!0,delete a.cardNumber);this._settings=d.extend({},
l,a);c&&this.cardNumber(b);return this},onToggle:function(a){return this._setCallback("onToggle",a)},onValid:function(a){return this._setCallback("onValid",a)},onValidation:function(a){return this.onValid(a)},onInvalid:function(a){return this._setCallback("onInvalid",a)},onError:function(a){return this.onInvalid(a)},onUnknown:function(a){return this._setCallback("onUnknown",a)},onGuess:function(a){return"function"!==typeof a?this:this.onUnknown(function(b,c){b&&a(b,c)})},onReset:function(a){return"function"!==
typeof a?this:this.onUnknown(function(b){b||a()})},onCardChange:function(a){return this._setCallback("onCardChange",a)},onTypeUpdate:function(a){return this.onCardChange(a)},_setCallback:function(a,b){if("function"!==typeof b)return this;this._callbacks[a]||(this._callbacks[a]=[]);this._callbacks[a].push(b);return this},_runCallbacks:function(a,b,c){a=this._callbacks[a];if(!a||0===a.length)return this;b=b||null;c=c||this;for(var d=0;d<a.length;d++)a[d].apply(c,b);return this},_setCardType:function(a){this._cardType!==
a&&this._runCallbacks("onCardChange",[a,this.niceName(a)]);this._cardType=a;return this},_delayState:function(a,b){var c=this;setTimeout(function(){a!==c._isValid&&c._switchState(a,b)},50);return this},_switchState:function(a,b){"undefined"===typeof b&&(b=null);if(a===this._isValid&&this._cardType===b)return this;this._setCardType(b);this._isValid=a;!0===a?this._runCallbacks("onValid",[b,this.niceName(b)]):!1===a?this._runCallbacks("onInvalid"):null===a&&this._runCallbacks("onUnknown",[b,this.niceName(b)]);
this._runCallbacks("onToggle",[a,b,this.niceName(b)]);return this}};h.CardCheck=k;var m=function(a,b,c){"undefined"!==typeof c.enableIcons&&!0!==c.enableIcons&&(this.disabled=!0);this.$el=a;this.uniqueClass=b;this.acceptedCards=c.acceptedCards;this.iconLocation=c.iconLocation?d(c.iconLocation):a.parent();this.iconDir=c.iconDir?c.iconDir:"images/";this.iconExt=c.iconExt?c.iconExt:"png";this.iconClass=c.iconClass?c.iconClass:"card-icons";this.createIcons();this.icons=d("."+this.iconClass+this.uniqueClass);
return this};m.prototype={createIcons:function(){if(this.disabled)return this;var a=this;d.each(a.acceptedCards,function(b,c){a.iconLocation.append(d("<img>").attr("id","card-"+c+a.uniqueClass).attr("src",a.iconDir+c+"."+a.iconExt).addClass(a.iconClass+a.uniqueClass))});return this},showOnly:function(a){if(this.disabled)return this;var b=this;this.hideExcept(a,function(a){b.showCard(a)});return this},showCard:function(a){d("#card-"+a+this.uniqueClass).css("opacity",1);return this},showAll:function(){if(this.disabled)return this;
this.icons.css("opacity",1);return this},hideExcept:function(a,b){if(this.disabled)return this;b=b||function(){};this.icons.not("#card-"+a+this.uniqueClass).fadeTo("fast",.2,function(){b(a)});return this},hideAll:function(){if(this.disabled)return this;this.icons.fadeTo("fast",.2);return this}};d.cardcheck=function(a,b){h.CardCheckInstances||(h.CardCheckInstances={});"object"===typeof a&&"input"in a&&(b=a,a=b.input);b=b||{};var c=d(a),f=new k(b),e=Math.floor(1E3*Math.random()),g=new m(c,e,f._settings),
l=function(a){this.event=a;this.run=function(a){c.trigger("cc:"+this.event,a)};return this},n="onToggle onValid onValidation onInvalid onError onUnknown onGuess onReset onCardChange onTypeUpdate".split(" ");c.addClass("cardcheck-instance-"+e).data("cardcheck-instance",e);h.CardCheckInstances[e]||(h.CardCheckInstances[e]=f);for(e=0;e<n.length;e++)(function(a){if(f[a]){var c=new l(a);f[a](function(){c.run(arguments)});if(b[a])f[a](b[a])}})(n[e]);f.onInvalid(function(){g.hideAll()}).onValid(function(a){g.showOnly(a)}).onGuess(function(a){g.showOnly(a)}).onReset(function(){g.showAll()});
c.on("keyup.cardcheck change.cardcheck",function(){f.cardNumber(d(this).val())});c.trigger("cc:initialized",[g]);return c};d.fn.cardcheck=function(a){if(d(this).data("cardcheck-instance")){var b=h.CardCheckInstances[d(this).data("cardcheck-instance")];if("instance"===a)return b;if("evaluate"===a)return b.evaluate(),d(this)}else if("instance"===a||"evaluate"===a)return d(this);return this.each(function(){if(!0!==d(this).data("cardcheck"))return d.cardcheck(this,a).data("cardcheck",!0)})}}})(window,
jQuery);